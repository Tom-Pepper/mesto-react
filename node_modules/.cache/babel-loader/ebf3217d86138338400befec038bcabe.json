{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/artem/Desktop/dev/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useContext } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar\n}) {\n  _s();\n\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext); //Реф для прямого доступа к DOM-элементу инпута и его значению\n\n  const avatarRef = useRef(''); //Стейт для аватарки\n  // const [avatar, setAvatar] = useState('');\n  //Установка аватарки пользователя\n\n  useEffect(() => {\n    avatarRef.current = currentUser.avatar;\n  }, [currentUser]);\n  useEffect(() => {\n    avatarRef.current = '';\n  }, [isOpen]); // function handleChangeAvatar(event) {\n  //   setAvatar(event.target.value)\n  // }\n  //Обработчик сабмита формы (обновление аватарки)\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    name: \"edit-avatar\",\n    buttonName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__name popup__input\",\n      type: \"url\",\n      name: \"avatar\",\n      required: true,\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044E\",\n      ref: avatarRef,\n      onChange: avatarRef.current,\n      value: avatarRef.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"avatar-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditAvatarPopup, \"m9KrbzTJu9A4Y1KxomTQkFh7Z6I=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/artem/Desktop/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","useRef","useState","useEffect","useContext","PopupWithForm","CurrentUserContext","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","currentUser","avatarRef","current","avatar","handleSubmit","event","preventDefault","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,CAAzB,EAA8D;AAAA;;AAC5D;AACA,QAAMC,WAAW,GAAGP,UAAU,CAACE,kBAAD,CAA9B,CAF4D,CAI5D;;AACA,QAAMM,SAAS,GAAGX,MAAM,CAAC,EAAD,CAAxB,CAL4D,CAO5D;AACA;AAEA;;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAACC,OAAV,GAAoBF,WAAW,CAACG,MAAhC;AACD,GAFQ,EAEN,CAACH,WAAD,CAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAACC,OAAV,GAAoB,EAApB;AACD,GAFQ,EAEN,CAACL,MAAD,CAFM,CAAT,CAf4D,CAmB5D;AACA;AACA;AAEA;;AACA,WAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AAEAP,IAAAA,cAAc,CAAC;AACbI,MAAAA,MAAM,EAAEF,SAAS,CAACC,OAAV,CAAkBK;AADb,KAAD,CAAd;AAGD;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,MAAM,EAAEV,MADV;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,KAAK,EAAC,uFAHR;AAIE,IAAA,IAAI,EAAC,aAJP;AAKE,IAAA,UAAU,EAAC,wDALb;AAME,IAAA,QAAQ,EAAEM,YANZ;AAAA,4BAQE;AACE,MAAA,SAAS,EAAC,0BADZ;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,WAAW,EAAC,gHALd;AAME,MAAA,GAAG,EAAEH,SANP;AAOE,MAAA,QAAQ,EAAEA,SAAS,CAACC,OAPtB;AAQE,MAAA,KAAK,EAAED,SAAS,CAACC;AARnB;AAAA;AAAA;AAAA;AAAA,YARF,eAkBE;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1DQN,e;;KAAAA,e;AA4DT,eAAeA,eAAf","sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  //Реф для прямого доступа к DOM-элементу инпута и его значению\n  const avatarRef = useRef('');\n\n  //Стейт для аватарки\n  // const [avatar, setAvatar] = useState('');\n\n  //Установка аватарки пользователя\n  useEffect(() => {\n    avatarRef.current = currentUser.avatar\n  }, [currentUser])\n\n  useEffect(() => {\n    avatarRef.current = ''\n  }, [isOpen])\n\n  // function handleChangeAvatar(event) {\n  //   setAvatar(event.target.value)\n  // }\n\n  //Обработчик сабмита формы (обновление аватарки)\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  return(\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Обновить аватар\"\n      name=\"edit-avatar\"\n      buttonName=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        className=\"popup__name popup__input\"\n        type=\"url\"\n        name=\"avatar\"\n        required\n        placeholder=\"Ссылка на фотографию\"\n        ref={avatarRef}\n        onChange={avatarRef.current}\n        value={avatarRef.current}\n      />\n      <span\n        id=\"avatar-error\"\n        className=\"error\"\n      >\n          </span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n"]},"metadata":{},"sourceType":"module"}