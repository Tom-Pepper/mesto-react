{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/artem/Desktop/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose\n}) {\n  _s();\n\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext); //Cтейты имени и описания профиля\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState(''); //После загрузки данных пользователя из API, эти данные будут использоваться в управляемых компонентах (полях)\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]); //Функция для изменения имени через поле ввода\n\n  function handleUserName(event) {\n    setName(event.target.value);\n  } //Функция для изменения описания профиля через поле ввода\n\n\n  function handleUserDescription(event) {\n    setDescription(event.target.value);\n  } //Обработчик сабмита формы\n\n\n  function handleSubmit(event) {\n    event.preventDefault(); //Передача значений управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    name: \"edit-profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    buttonName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      name: \"profile-name\",\n      type: \"text\",\n      className: \"popup__name popup__input\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      onChange: handleUserName,\n      minLength: \"2\",\n      maxLength: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"profile-name-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      required: true,\n      name: \"profile-job\",\n      type: \"text\",\n      className: \"popup__job popup__input\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      onChange: handleUserDescription,\n      minLength: \"2\",\n      maxLength: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"profile-job-error\",\n      className: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/artem/Desktop/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useState","useContext","useEffect","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","currentUser","name","setName","description","setDescription","about","handleUserName","event","target","value","handleUserDescription","handleSubmit","preventDefault","props","onUpdateUser"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAA1B,EAA+C;AAAA;;AAC7C;AACA,QAAMC,WAAW,GAAGP,UAAU,CAACG,kBAAD,CAA9B,CAF6C,CAI7C;;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C,CAN6C,CAQ7C;;AACAE,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACF,WAAW,CAACC,IAAb,CAAP;AACAG,IAAAA,cAAc,CAACJ,WAAW,CAACK,KAAb,CAAd;AACD,GAHQ,EAGN,CAACL,WAAD,CAHM,CAAT,CAT6C,CAc7C;;AACA,WAASM,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BL,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAjB4C,CAmB7C;;;AACA,WAASC,qBAAT,CAA+BH,KAA/B,EAAsC;AACpCH,IAAAA,cAAc,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAtB4C,CAwB7C;;;AACA,WAASE,YAAT,CAAsBJ,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACK,cAAN,GAD2B,CAG3B;;AACAC,IAAAA,KAAK,CAACC,YAAN,CAAmB;AACjBb,MAAAA,IADiB;AAEjBI,MAAAA,KAAK,EAAEF;AAFU,KAAnB;AAID;;AAED,sBACE,QAAC,aAAD;AACE,IAAA,MAAM,EAAEL,MADV;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,IAAI,EAAC,cAHP;AAIE,IAAA,KAAK,EAAC,2HAJR;AAKE,IAAA,UAAU,EAAC,wDALb;AAAA,4BAOE;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,0BAJZ;AAKE,MAAA,WAAW,EAAC,oBALd;AAME,MAAA,QAAQ,EAAEO,cANZ;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,YAPF,eAiBE;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YAjBF,eAqBE;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,IAAI,EAAC,aAFP;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,yBAJZ;AAKE,MAAA,WAAW,EAAC,iCALd;AAME,MAAA,QAAQ,EAAEI,qBANZ;AAOE,MAAA,SAAS,EAAC,GAPZ;AAQE,MAAA,SAAS,EAAC;AARZ;AAAA;AAAA;AAAA;AAAA,YArBF,eA+BE;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA1EQb,gB;;KAAAA,gB;AA4ET,eAAeA,gBAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup({ isOpen, onClose }) {\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  //Cтейты имени и описания профиля\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  //После загрузки данных пользователя из API, эти данные будут использоваться в управляемых компонентах (полях)\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser])\n\n  //Функция для изменения имени через поле ввода\n  function handleUserName(event) {\n    setName(event.target.value)\n  }\n\n  //Функция для изменения описания профиля через поле ввода\n  function handleUserDescription(event) {\n    setDescription(event.target.value)\n  }\n\n  //Обработчик сабмита формы\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    //Передача значений управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      name=\"edit-profile\"\n      title=\"Редактировать профиль\"\n      buttonName=\"Сохранить\"\n    >\n      <input\n        required\n        name=\"profile-name\"\n        type=\"text\"\n        className=\"popup__name popup__input\"\n        placeholder=\"Имя\"\n        onChange={handleUserName}\n        minLength=\"2\"\n        maxLength=\"40\"\n      />\n      <span\n        id=\"profile-name-error\"\n        className=\"error\">\n          </span>\n      <input\n        required\n        name=\"profile-job\"\n        type=\"text\"\n        className=\"popup__job popup__input\"\n        placeholder=\"О себе\"\n        onChange={handleUserDescription}\n        minLength=\"2\"\n        maxLength=\"200\"\n      />\n      <span\n        id=\"profile-job-error\"\n        className=\"error\">\n          </span>\n\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n"]},"metadata":{},"sourceType":"module"}