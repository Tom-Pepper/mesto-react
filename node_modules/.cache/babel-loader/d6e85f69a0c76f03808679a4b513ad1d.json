{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/artem/Desktop/dev/mesto-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect,useContext}from'react';import PopupWithForm from\"./PopupWithForm\";import CurrentUserContext from\"../contexts/CurrentUserContext\";function EditAvatarPopup(_ref){var isOpen=_ref.isOpen,onClose=_ref.onClose,onUpdateAvatar=_ref.onUpdateAvatar;//Подписываемся на контекст\nvar currentUser=useContext(CurrentUserContext);//Реф для прямого доступа к DOM-элементу инпута и его значению\nvar avatarRef=useRef('');//Стейт для аватарки\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),avatar=_useState2[0],setAvatar=_useState2[1];//Установка аватарки пользователя\nuseEffect(function(){setAvatar(currentUser.avatar);},[currentUser]);function handleChangeAvatar(event){setAvatar(event.target.value);}//Обработчик сабмита формы (обновление аватарки)\nfunction handleSubmit(event){event.preventDefault();onUpdateAvatar({avatar:avatarRef.current.value});}return/*#__PURE__*/_jsxs(PopupWithForm,{isOpen:isOpen,onClose:onClose,title:\"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",name:\"edit-avatar\",buttonName:\"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{className:\"popup__name popup__input\",type:\"url\",name:\"avatar\",required:true,placeholder:\"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044E\",ref:avatarRef,onChange:handleChangeAvatar}),/*#__PURE__*/_jsx(\"span\",{id:\"avatar-error\",className:\"error\"})]});}export default EditAvatarPopup;","map":{"version":3,"sources":["/Users/artem/Desktop/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","useRef","useState","useEffect","useContext","PopupWithForm","CurrentUserContext","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","currentUser","avatarRef","avatar","setAvatar","handleChangeAvatar","event","target","value","handleSubmit","preventDefault","current"],"mappings":"mPAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,SAAlC,CAA6CC,UAA7C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,gCAA/B,CAEA,QAASC,CAAAA,eAAT,MAA8D,IAAnCC,CAAAA,MAAmC,MAAnCA,MAAmC,CAA3BC,OAA2B,MAA3BA,OAA2B,CAAlBC,cAAkB,MAAlBA,cAAkB,CAC5D;AACA,GAAMC,CAAAA,WAAW,CAAGP,UAAU,CAACE,kBAAD,CAA9B,CAEA;AACA,GAAMM,CAAAA,SAAS,CAAGX,MAAM,CAAC,EAAD,CAAxB,CAEA;AAP4D,cAQhCC,QAAQ,CAAC,EAAD,CARwB,wCAQrDW,MARqD,eAQ7CC,SAR6C,eAU5D;AACAX,SAAS,CAAC,UAAM,CACdW,SAAS,CAACH,WAAW,CAACE,MAAb,CAAT,CACD,CAFQ,CAEN,CAACF,WAAD,CAFM,CAAT,CAIA,QAASI,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACjCF,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT,CACD,CAED;AACA,QAASC,CAAAA,YAAT,CAAsBH,KAAtB,CAA6B,CAC3BA,KAAK,CAACI,cAAN,GAEAV,cAAc,CAAC,CACbG,MAAM,CAAED,SAAS,CAACS,OAAV,CAAkBH,KADb,CAAD,CAAd,CAGD,CAED,mBACE,MAAC,aAAD,EACE,MAAM,CAAEV,MADV,CAEE,OAAO,CAAEC,OAFX,CAGE,KAAK,CAAC,uFAHR,CAIE,IAAI,CAAC,aAJP,CAKE,UAAU,CAAC,wDALb,CAME,QAAQ,CAAEU,YANZ,wBAQE,cACE,SAAS,CAAC,0BADZ,CAEE,IAAI,CAAC,KAFP,CAGE,IAAI,CAAC,QAHP,CAIE,QAAQ,KAJV,CAKE,WAAW,CAAC,gHALd,CAME,GAAG,CAAEP,SANP,CAOE,QAAQ,CAAEG,kBAPZ,EARF,cAiBE,aACE,EAAE,CAAC,cADL,CAEE,SAAS,CAAC,OAFZ,EAjBF,GADF,CAyBD,CAED,cAAeR,CAAAA,eAAf","sourcesContent":["import React, { useRef, useState, useEffect, useContext } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport CurrentUserContext from \"../contexts/CurrentUserContext\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  //Подписываемся на контекст\n  const currentUser = useContext(CurrentUserContext);\n\n  //Реф для прямого доступа к DOM-элементу инпута и его значению\n  const avatarRef = useRef('');\n\n  //Стейт для аватарки\n  const [avatar, setAvatar] = useState('');\n\n  //Установка аватарки пользователя\n  useEffect(() => {\n    setAvatar(currentUser.avatar)\n  }, [currentUser])\n\n  function handleChangeAvatar(event) {\n    setAvatar(event.target.value)\n  }\n\n  //Обработчик сабмита формы (обновление аватарки)\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value\n    });\n  }\n\n  return(\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Обновить аватар\"\n      name=\"edit-avatar\"\n      buttonName=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        className=\"popup__name popup__input\"\n        type=\"url\"\n        name=\"avatar\"\n        required\n        placeholder=\"Ссылка на фотографию\"\n        ref={avatarRef}\n        onChange={handleChangeAvatar}\n      />\n      <span\n        id=\"avatar-error\"\n        className=\"error\"\n      >\n          </span>\n    </PopupWithForm>\n  )\n}\n\nexport default EditAvatarPopup;\n"]},"metadata":{},"sourceType":"module"}